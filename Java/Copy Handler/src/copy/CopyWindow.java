/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CopyWindow.java
 *
 * Created on Mar 2, 2012, 9:19:57 PM
 */
package copy;

import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Malik
 */
public class CopyWindow extends javax.swing.JFrame {
	/** Creates new form CopyWindow */
	public CopyWindow() {
		initComponents();
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text_from = new javax.swing.JTextField();
        text_to = new javax.swing.JTextField();
        btn_from = new javax.swing.JButton();
        btn_to = new javax.swing.JButton();
        btn_copy = new javax.swing.JButton();
        progressbar = new javax.swing.JProgressBar();
        btn_abt = new javax.swing.JButton();
        progress = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Copy");
        setLocationByPlatform(true);
        setName("win"); // NOI18N
        setResizable(false);

        text_from.setText("File to be copied from");

        text_to.setText("File to be copied to");

        btn_from.setText("Browse");
        btn_from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fromActionPerformed(evt);
            }
        });

        btn_to.setText("Browse");
        btn_to.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_toActionPerformed(evt);
            }
        });

        btn_copy.setText("Copy");
        btn_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_copyActionPerformed(evt);
            }
        });

        btn_abt.setText("!");
        btn_abt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_abtActionPerformed(evt);
            }
        });

        progress.setText("0KB/0KB");
        progress.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text_from, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                    .addComponent(text_to, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_from)
                                    .addComponent(btn_to)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_copy, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(progress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                        .addComponent(btn_abt, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_from))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_to)
                    .addComponent(text_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_copy)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(progress)
                            .addComponent(btn_abt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btn_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_copyActionPerformed
		new Runnable() {
			Thread copythread;
			void start() {
				copythread=new Thread(this, "Copy");
				copythread.start();
			}
			@Override
			public void run() {
				try {
					File ifile=new File(text_from.getText());
					progressbar.setMaximum((int)ifile.length());
					progressbar.setValue(0);
					File ofile=new File(text_to.getText());
					FileInputStream is = new FileInputStream(ifile);
					FileOutputStream os=new FileOutputStream(ofile);
					byte[] b=new byte[1024*1024];
					int length, done=0;
					btn_copy.setEnabled(false);
					while((length=is.read(b))>0) {
						os.write(b, 0, length);
						done+=length;
						progressbar.setValue(done);
						progress.setText(done/1024+"KB/"+ifile.length()/1024+"KB");
					}
					is.close();
					os.close();
					btn_copy.setEnabled(true);
					progress.setText("0KB/0KB");
				} catch (IOException ex) {
					JOptionPane.showMessageDialog(null, ex, ex.getMessage(), JOptionPane.ERROR_MESSAGE);
				}
			}
		}.start();
	}//GEN-LAST:event_btn_copyActionPerformed
	private void btn_fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fromActionPerformed
		JFileChooser fc=new JFileChooser();
		fc.showOpenDialog(this);
		try{
			text_from.setText(fc.getSelectedFile().getPath());
		} catch(NullPointerException ex){}
	}//GEN-LAST:event_btn_fromActionPerformed

	private void btn_toActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_toActionPerformed
		JFileChooser fc=new JFileChooser();
		fc.showSaveDialog(this);
		try{
			text_to.setText(fc.getSelectedFile().getPath());
		} catch(NullPointerException ex){}
	}//GEN-LAST:event_btn_toActionPerformed

	private void btn_abtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_abtActionPerformed
		JOptionPane.showMessageDialog(this, "- by Rakesh Malik", "About Copy", JOptionPane.INFORMATION_MESSAGE);
	}//GEN-LAST:event_btn_abtActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(CopyWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(CopyWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(CopyWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(CopyWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new CopyWindow().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_abt;
    private javax.swing.JButton btn_copy;
    private javax.swing.JButton btn_from;
    private javax.swing.JButton btn_to;
    private javax.swing.JLabel progress;
    private javax.swing.JProgressBar progressbar;
    private javax.swing.JTextField text_from;
    private javax.swing.JTextField text_to;
    // End of variables declaration//GEN-END:variables
}
